name: ci
on:
  pull_request:
  push:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' || github.ref_name != 'main' }}

jobs:
  build-frontend:
    name: "build-frontend"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: ./.github/actions/setup_environment
        with:
          enable_npm: true

      - name: Check Tag
        ## This step is verifying that the tag follow the semver
        ## It is only triggered when a tag is created
        if: ${{ github.event_name == 'push' && startsWith(github.ref_name, 'v') }}
        run: ./scripts/release.sh --check-version "${{ github.ref_name }}"

      - name: Check libraries version
        ## This step is verifying that the version of each package is matching the tag
        if: ${{ github.event_name == 'push' && startsWith(github.ref_name, 'v') }}
        run: ./scripts/ui_release.sh --check-package "${{ github.ref_name }}"

      - name: Snapshot
        ## This step only runs for "snapshot" branches starting with "snapshot/"
        if: ${{ github.event_name == 'push' && startsWith(github.ref_name, 'snapshot/') }}
        run: make snapshot-version branch="${{ github.ref_name }}" sha="${{ github.sha }}"

      - name: Install UI deps
        run: cd ./ui && npm install
      - name: Build the app and all packages
        run: cd ./ui && npm run build
      - name: store react production build
        uses: actions/upload-artifact@v3
        with:
          name: ui-libs
          path: |
            ui/**/dist
            !ui/node_modules

  libs-release:
    name: "libs-release"
    needs: "build-frontend"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: ./.github/actions/setup_environment
        with:
          enable_npm: true
      - name: Download react build
        uses: actions/download-artifact@v3
        with:
          name: ui-libs
          path: ui
      - name: Copy files before publishing libs
        run: ./scripts/ui_release.sh --copy
      - name: Publish dry-run libraries
        if: ${{ github.event_name == 'pull_request' || github.ref_name == 'main' }}
        run: ./scripts/ui_release.sh --publish dry-run
      - name: Publish libraries
        if: ${{ github.event_name == 'push' && startsWith(github.ref_name, 'v') }}
        run: ./scripts/ui_release.sh --publish
        env:
          # The setup-node action writes an .npmrc file with this env variable
          # as the placeholder for the auth token
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Snapshot
        ## This step only runs for "snapshot" branches starting with "snapshot/"
        ## We have to do this again in this job because the version change is
        ## automated and not committed to git.
        if: ${{ github.event_name == 'push' && startsWith(github.ref_name, 'snapshot/') }}
        run: ./scripts/ui_release.sh --snapshot-version "${{ github.ref_name }}" "${{ github.sha }}" && cd ./ui && npm install
      - name: Publish snapshot
        ## This step only runs for "snapshot" branches starting with "snapshot/"
        if: ${{ github.event_name == 'push' && startsWith(github.ref_name, 'snapshot/') }}
        run: ./scripts/ui_release.sh --publish-snapshot "${{ github.ref_name }}"
        env:
          # The setup-node action writes an .npmrc file with this env variable
          # as the placeholder for the auth token
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Archive npm failure logs
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: npm-logs
          path: ~/.npm/_logs

  build:
    name: "go and github release"
    needs: "build-frontend"
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: ./.github/actions/setup_environment
        with:
          enable_go: true
      - name: Download react build
        uses: actions/download-artifact@v3
        with:
          name: ui-libs
          path: ui
      - name: Extract Changelog
        run: make generate-changelog
      - name: install goreleaser
        uses: goreleaser/goreleaser-action@v3
        with:
          distribution: goreleaser
          install-only: true
      - name: Build Go binaries
        run: make cross-build
      - name: Publish Release
        if: ${{ github.event_name == 'push' && startsWith(github.ref_name, 'v') }}
        run: make cross-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
